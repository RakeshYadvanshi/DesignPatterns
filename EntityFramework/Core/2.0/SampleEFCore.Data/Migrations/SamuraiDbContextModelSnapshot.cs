// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleEFCore.Data;

namespace SampleEFCore.Data.Migrations
{
    [DbContext(typeof(SamuraiDbContext))]
    partial class SamuraiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SampleEF.Domain.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BattleName");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("SampleEF.Domain.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SamuraiId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("SamuraiId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("SampleEF.Domain.Samurai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("SamuraiLivingLivingId");

                    b.Property<int?>("SamuraiLivingSamuraiId");

                    b.HasKey("Id");

                    b.HasIndex("SamuraiLivingLivingId", "SamuraiLivingSamuraiId");

                    b.ToTable("Samurais");
                });

            modelBuilder.Entity("SampleEF.Domain.SamuraiBattle", b =>
                {
                    b.Property<int>("BattleId");

                    b.Property<int>("SamuraiId");

                    b.HasKey("BattleId", "SamuraiId");

                    b.HasIndex("SamuraiId");

                    b.ToTable("SamuraiBattles");
                });

            modelBuilder.Entity("SampleEF.Domain.SamuraiLiving", b =>
                {
                    b.Property<int>("LivingId");

                    b.Property<int>("SamuraiId");

                    b.HasKey("LivingId", "SamuraiId");

                    b.ToTable("SamuraiLivings");
                });

            modelBuilder.Entity("SampleEF.Domain.SamuraiLivingDetail", b =>
                {
                    b.Property<int>("LivingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("Line1");

                    b.Property<string>("Line2");

                    b.Property<int?>("SamuraiLivingLivingId");

                    b.Property<int?>("SamuraiLivingSamuraiId");

                    b.Property<string>("State");

                    b.Property<string>("city");

                    b.Property<string>("pinCode");

                    b.HasKey("LivingId");

                    b.HasIndex("SamuraiLivingLivingId", "SamuraiLivingSamuraiId");

                    b.ToTable("SamuraiLivingDetails");
                });

            modelBuilder.Entity("SampleEF.Domain.Quote", b =>
                {
                    b.HasOne("SampleEF.Domain.Samurai", "Samurai")
                        .WithMany("Quotes")
                        .HasForeignKey("SamuraiId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SampleEF.Domain.Samurai", b =>
                {
                    b.HasOne("SampleEF.Domain.SamuraiLiving")
                        .WithMany("Samurais")
                        .HasForeignKey("SamuraiLivingLivingId", "SamuraiLivingSamuraiId");
                });

            modelBuilder.Entity("SampleEF.Domain.SamuraiBattle", b =>
                {
                    b.HasOne("SampleEF.Domain.Battle", "Battle")
                        .WithMany("SamuraiBattles")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SampleEF.Domain.Samurai", "Samurai")
                        .WithMany("SamuraiBattles")
                        .HasForeignKey("SamuraiId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SampleEF.Domain.SamuraiLivingDetail", b =>
                {
                    b.HasOne("SampleEF.Domain.SamuraiLiving")
                        .WithMany("SamuraiLivingDetails")
                        .HasForeignKey("SamuraiLivingLivingId", "SamuraiLivingSamuraiId");
                });
#pragma warning restore 612, 618
        }
    }
}
